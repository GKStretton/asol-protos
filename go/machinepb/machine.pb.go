// A Study of Light machine messages

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: machine.proto

package machinepb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Mode int32

const (
	Mode_UNDEFINED_MODE Mode = 0
	Mode_MANUAL         Mode = 1
	Mode_AUTONOMOUS     Mode = 2
)

// Enum value maps for Mode.
var (
	Mode_name = map[int32]string{
		0: "UNDEFINED_MODE",
		1: "MANUAL",
		2: "AUTONOMOUS",
	}
	Mode_value = map[string]int32{
		"UNDEFINED_MODE": 0,
		"MANUAL":         1,
		"AUTONOMOUS":     2,
	}
)

func (x Mode) Enum() *Mode {
	p := new(Mode)
	*p = x
	return p
}

func (x Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_machine_proto_enumTypes[0].Descriptor()
}

func (Mode) Type() protoreflect.EnumType {
	return &file_machine_proto_enumTypes[0]
}

func (x Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Mode.Descriptor instead.
func (Mode) EnumDescriptor() ([]byte, []int) {
	return file_machine_proto_rawDescGZIP(), []int{0}
}

type Status int32

const (
	Status_UNDEFINED_STATUS Status = 0
	Status_E_STOP_ACTIVE    Status = 5
	Status_SLEEPING         Status = 6
	Status_SHUTTING_DOWN    Status = 9
	Status_WAKING_UP        Status = 10
	Status_CALIBRATING      Status = 20
	Status_IDLE             Status = 30
	Status_FILLING_BOWL     Status = 40
	Status_DRAINING_BOWL    Status = 41
	Status_CLEANING_BOWL    Status = 42
	Status_DISPENSING       Status = 50
	Status_COLLECTING       Status = 60
	Status_NAVIGATING_IK    Status = 70
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0:  "UNDEFINED_STATUS",
		5:  "E_STOP_ACTIVE",
		6:  "SLEEPING",
		9:  "SHUTTING_DOWN",
		10: "WAKING_UP",
		20: "CALIBRATING",
		30: "IDLE",
		40: "FILLING_BOWL",
		41: "DRAINING_BOWL",
		42: "CLEANING_BOWL",
		50: "DISPENSING",
		60: "COLLECTING",
		70: "NAVIGATING_IK",
	}
	Status_value = map[string]int32{
		"UNDEFINED_STATUS": 0,
		"E_STOP_ACTIVE":    5,
		"SLEEPING":         6,
		"SHUTTING_DOWN":    9,
		"WAKING_UP":        10,
		"CALIBRATING":      20,
		"IDLE":             30,
		"FILLING_BOWL":     40,
		"DRAINING_BOWL":    41,
		"CLEANING_BOWL":    42,
		"DISPENSING":       50,
		"COLLECTING":       60,
		"NAVIGATING_IK":    70,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_machine_proto_enumTypes[1].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_machine_proto_enumTypes[1]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_machine_proto_rawDescGZIP(), []int{1}
}

type PingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number uint32 `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machine_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_machine_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_machine_proto_rawDescGZIP(), []int{0}
}

func (x *PingResponse) GetNumber() uint32 {
	if x != nil {
		return x.Number
	}
	return 0
}

type PipetteState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spent          bool    `protobuf:"varint,1,opt,name=spent,proto3" json:"spent,omitempty"`
	VialHeld       uint32  `protobuf:"varint,2,opt,name=vial_held,json=vialHeld,proto3" json:"vial_held,omitempty"`
	VolumeTargetUl float32 `protobuf:"fixed32,3,opt,name=volume_target_ul,json=volumeTargetUl,proto3" json:"volume_target_ul,omitempty"`
}

func (x *PipetteState) Reset() {
	*x = PipetteState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machine_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipetteState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipetteState) ProtoMessage() {}

func (x *PipetteState) ProtoReflect() protoreflect.Message {
	mi := &file_machine_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipetteState.ProtoReflect.Descriptor instead.
func (*PipetteState) Descriptor() ([]byte, []int) {
	return file_machine_proto_rawDescGZIP(), []int{1}
}

func (x *PipetteState) GetSpent() bool {
	if x != nil {
		return x.Spent
	}
	return false
}

func (x *PipetteState) GetVialHeld() uint32 {
	if x != nil {
		return x.VialHeld
	}
	return 0
}

func (x *PipetteState) GetVolumeTargetUl() float32 {
	if x != nil {
		return x.VolumeTargetUl
	}
	return 0
}

type CollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Completed     bool    `protobuf:"varint,1,opt,name=completed,proto3" json:"completed,omitempty"`
	RequestNumber uint64  `protobuf:"varint,2,opt,name=request_number,json=requestNumber,proto3" json:"request_number,omitempty"`
	VialNumber    uint64  `protobuf:"varint,3,opt,name=vial_number,json=vialNumber,proto3" json:"vial_number,omitempty"`
	VolumeUl      float32 `protobuf:"fixed32,4,opt,name=volume_ul,json=volumeUl,proto3" json:"volume_ul,omitempty"`
}

func (x *CollectionRequest) Reset() {
	*x = CollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machine_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionRequest) ProtoMessage() {}

func (x *CollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_machine_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionRequest.ProtoReflect.Descriptor instead.
func (*CollectionRequest) Descriptor() ([]byte, []int) {
	return file_machine_proto_rawDescGZIP(), []int{2}
}

func (x *CollectionRequest) GetCompleted() bool {
	if x != nil {
		return x.Completed
	}
	return false
}

func (x *CollectionRequest) GetRequestNumber() uint64 {
	if x != nil {
		return x.RequestNumber
	}
	return 0
}

func (x *CollectionRequest) GetVialNumber() uint64 {
	if x != nil {
		return x.VialNumber
	}
	return 0
}

func (x *CollectionRequest) GetVolumeUl() float32 {
	if x != nil {
		return x.VolumeUl
	}
	return 0
}

type MovementDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ik target from -1 to 1
	TargetXUnit float32 `protobuf:"fixed32,1,opt,name=target_x_unit,json=targetXUnit,proto3" json:"target_x_unit,omitempty"`
	// ik target from -1 to 1
	TargetYUnit float32 `protobuf:"fixed32,2,opt,name=target_y_unit,json=targetYUnit,proto3" json:"target_y_unit,omitempty"`
	// fk target in degrees
	TargetRingDeg float32 `protobuf:"fixed32,10,opt,name=target_ring_deg,json=targetRingDeg,proto3" json:"target_ring_deg,omitempty"`
	// fk target in degrees
	TargetYawDeg float32 `protobuf:"fixed32,11,opt,name=target_yaw_deg,json=targetYawDeg,proto3" json:"target_yaw_deg,omitempty"`
}

func (x *MovementDetails) Reset() {
	*x = MovementDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machine_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovementDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovementDetails) ProtoMessage() {}

func (x *MovementDetails) ProtoReflect() protoreflect.Message {
	mi := &file_machine_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovementDetails.ProtoReflect.Descriptor instead.
func (*MovementDetails) Descriptor() ([]byte, []int) {
	return file_machine_proto_rawDescGZIP(), []int{3}
}

func (x *MovementDetails) GetTargetXUnit() float32 {
	if x != nil {
		return x.TargetXUnit
	}
	return 0
}

func (x *MovementDetails) GetTargetYUnit() float32 {
	if x != nil {
		return x.TargetYUnit
	}
	return 0
}

func (x *MovementDetails) GetTargetRingDeg() float32 {
	if x != nil {
		return x.TargetRingDeg
	}
	return 0
}

func (x *MovementDetails) GetTargetYawDeg() float32 {
	if x != nil {
		return x.TargetYawDeg
	}
	return 0
}

type CalibrationState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FullyCalibrated bool `protobuf:"varint,1,opt,name=fully_calibrated,json=fullyCalibrated,proto3" json:"fully_calibrated,omitempty"`
}

func (x *CalibrationState) Reset() {
	*x = CalibrationState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machine_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalibrationState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalibrationState) ProtoMessage() {}

func (x *CalibrationState) ProtoReflect() protoreflect.Message {
	mi := &file_machine_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalibrationState.ProtoReflect.Descriptor instead.
func (*CalibrationState) Descriptor() ([]byte, []int) {
	return file_machine_proto_rawDescGZIP(), []int{4}
}

func (x *CalibrationState) GetFullyCalibrated() bool {
	if x != nil {
		return x.FullyCalibrated
	}
	return false
}

type StateReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// timestamp in microseconds since unix epoch, UTC. Added
	// by gateway since firmware doesn't know real time.
	TimestampUnixMicros uint64             `protobuf:"varint,2,opt,name=timestamp_unix_micros,json=timestampUnixMicros,proto3" json:"timestamp_unix_micros,omitempty"`
	Mode                Mode               `protobuf:"varint,4,opt,name=mode,proto3,enum=machine.Mode" json:"mode,omitempty"`
	Status              Status             `protobuf:"varint,5,opt,name=status,proto3,enum=machine.Status" json:"status,omitempty"`
	PipetteState        *PipetteState      `protobuf:"bytes,10,opt,name=pipette_state,json=pipetteState,proto3" json:"pipette_state,omitempty"`
	CollectionRequest   *CollectionRequest `protobuf:"bytes,11,opt,name=collection_request,json=collectionRequest,proto3" json:"collection_request,omitempty"`
	MovementDetails     *MovementDetails   `protobuf:"bytes,12,opt,name=movement_details,json=movementDetails,proto3" json:"movement_details,omitempty"`
	CalibrationState    *CalibrationState  `protobuf:"bytes,13,opt,name=calibration_state,json=calibrationState,proto3" json:"calibration_state,omitempty"`
}

func (x *StateReport) Reset() {
	*x = StateReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machine_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateReport) ProtoMessage() {}

func (x *StateReport) ProtoReflect() protoreflect.Message {
	mi := &file_machine_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateReport.ProtoReflect.Descriptor instead.
func (*StateReport) Descriptor() ([]byte, []int) {
	return file_machine_proto_rawDescGZIP(), []int{5}
}

func (x *StateReport) GetTimestampUnixMicros() uint64 {
	if x != nil {
		return x.TimestampUnixMicros
	}
	return 0
}

func (x *StateReport) GetMode() Mode {
	if x != nil {
		return x.Mode
	}
	return Mode_UNDEFINED_MODE
}

func (x *StateReport) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_UNDEFINED_STATUS
}

func (x *StateReport) GetPipetteState() *PipetteState {
	if x != nil {
		return x.PipetteState
	}
	return nil
}

func (x *StateReport) GetCollectionRequest() *CollectionRequest {
	if x != nil {
		return x.CollectionRequest
	}
	return nil
}

func (x *StateReport) GetMovementDetails() *MovementDetails {
	if x != nil {
		return x.MovementDetails
	}
	return nil
}

func (x *StateReport) GetCalibrationState() *CalibrationState {
	if x != nil {
		return x.CalibrationState
	}
	return nil
}

var File_machine_proto protoreflect.FileDescriptor

var file_machine_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x22, 0x26, 0x0a, 0x0c, 0x50, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x22, 0x6b, 0x0a, 0x0c, 0x50, 0x69, 0x70, 0x65, 0x74, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x69, 0x61, 0x6c, 0x5f, 0x68,
	0x65, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x76, 0x69, 0x61, 0x6c, 0x48,
	0x65, 0x6c, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x6c, 0x22, 0x96, 0x01,
	0x0a, 0x11, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x69, 0x61, 0x6c,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x76,
	0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x5f, 0x75, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x55, 0x6c, 0x22, 0xa7, 0x01, 0x0a, 0x0f, 0x4d, 0x6f, 0x76, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x5f, 0x78, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x58, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x22,
	0x0a, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x79, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x59, 0x55, 0x6e,
	0x69, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x72, 0x69, 0x6e,
	0x67, 0x5f, 0x64, 0x65, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x52, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x67, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x5f, 0x79, 0x61, 0x77, 0x5f, 0x64, 0x65, 0x67, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x59, 0x61, 0x77, 0x44, 0x65, 0x67,
	0x22, 0x3d, 0x0a, 0x10, 0x43, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x66, 0x75, 0x6c, 0x6c, 0x79, 0x5f, 0x63, 0x61,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f,
	0x66, 0x75, 0x6c, 0x6c, 0x79, 0x43, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x74, 0x65, 0x64, 0x22,
	0xa7, 0x03, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x32, 0x0a, 0x15, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x75, 0x6e, 0x69,
	0x78, 0x5f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e, 0x69, 0x78, 0x4d, 0x69, 0x63,
	0x72, 0x6f, 0x73, 0x12, 0x21, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0d, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x3a, 0x0a, 0x0d, 0x70, 0x69, 0x70, 0x65, 0x74, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x2e, 0x50, 0x69, 0x70, 0x65, 0x74, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x70,
	0x69, 0x70, 0x65, 0x74, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x49, 0x0a, 0x12, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x11, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x10, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0f, 0x6d, 0x6f, 0x76, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x46, 0x0a, 0x11, 0x63,
	0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x2e, 0x43, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x10, 0x63, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x2a, 0x36, 0x0a, 0x04, 0x4d, 0x6f, 0x64,
	0x65, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x5f, 0x4d,
	0x4f, 0x44, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x10,
	0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x55, 0x54, 0x4f, 0x4e, 0x4f, 0x4d, 0x4f, 0x55, 0x53, 0x10,
	0x02, 0x2a, 0xe7, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x10,
	0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x5f, 0x41, 0x43, 0x54,
	0x49, 0x56, 0x45, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x4c, 0x45, 0x45, 0x50, 0x49, 0x4e,
	0x47, 0x10, 0x06, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x48, 0x55, 0x54, 0x54, 0x49, 0x4e, 0x47, 0x5f,
	0x44, 0x4f, 0x57, 0x4e, 0x10, 0x09, 0x12, 0x0d, 0x0a, 0x09, 0x57, 0x41, 0x4b, 0x49, 0x4e, 0x47,
	0x5f, 0x55, 0x50, 0x10, 0x0a, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x41, 0x4c, 0x49, 0x42, 0x52, 0x41,
	0x54, 0x49, 0x4e, 0x47, 0x10, 0x14, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x44, 0x4c, 0x45, 0x10, 0x1e,
	0x12, 0x10, 0x0a, 0x0c, 0x46, 0x49, 0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x42, 0x4f, 0x57, 0x4c,
	0x10, 0x28, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x52, 0x41, 0x49, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x42,
	0x4f, 0x57, 0x4c, 0x10, 0x29, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4c, 0x45, 0x41, 0x4e, 0x49, 0x4e,
	0x47, 0x5f, 0x42, 0x4f, 0x57, 0x4c, 0x10, 0x2a, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x49, 0x53, 0x50,
	0x45, 0x4e, 0x53, 0x49, 0x4e, 0x47, 0x10, 0x32, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x4f, 0x4c, 0x4c,
	0x45, 0x43, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x3c, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x41, 0x56, 0x49,
	0x47, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x49, 0x4b, 0x10, 0x46, 0x42, 0x30, 0x5a, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6b, 0x73, 0x74, 0x72, 0x65,
	0x74, 0x74, 0x6f, 0x6e, 0x2f, 0x61, 0x73, 0x6f, 0x6c, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2f, 0x67, 0x6f, 0x2f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_machine_proto_rawDescOnce sync.Once
	file_machine_proto_rawDescData = file_machine_proto_rawDesc
)

func file_machine_proto_rawDescGZIP() []byte {
	file_machine_proto_rawDescOnce.Do(func() {
		file_machine_proto_rawDescData = protoimpl.X.CompressGZIP(file_machine_proto_rawDescData)
	})
	return file_machine_proto_rawDescData
}

var file_machine_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_machine_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_machine_proto_goTypes = []interface{}{
	(Mode)(0),                 // 0: machine.Mode
	(Status)(0),               // 1: machine.Status
	(*PingResponse)(nil),      // 2: machine.PingResponse
	(*PipetteState)(nil),      // 3: machine.PipetteState
	(*CollectionRequest)(nil), // 4: machine.CollectionRequest
	(*MovementDetails)(nil),   // 5: machine.MovementDetails
	(*CalibrationState)(nil),  // 6: machine.CalibrationState
	(*StateReport)(nil),       // 7: machine.StateReport
}
var file_machine_proto_depIdxs = []int32{
	0, // 0: machine.StateReport.mode:type_name -> machine.Mode
	1, // 1: machine.StateReport.status:type_name -> machine.Status
	3, // 2: machine.StateReport.pipette_state:type_name -> machine.PipetteState
	4, // 3: machine.StateReport.collection_request:type_name -> machine.CollectionRequest
	5, // 4: machine.StateReport.movement_details:type_name -> machine.MovementDetails
	6, // 5: machine.StateReport.calibration_state:type_name -> machine.CalibrationState
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_machine_proto_init() }
func file_machine_proto_init() {
	if File_machine_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_machine_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machine_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipetteState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machine_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machine_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovementDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machine_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalibrationState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machine_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_machine_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_machine_proto_goTypes,
		DependencyIndexes: file_machine_proto_depIdxs,
		EnumInfos:         file_machine_proto_enumTypes,
		MessageInfos:      file_machine_proto_msgTypes,
	}.Build()
	File_machine_proto = out.File
	file_machine_proto_rawDesc = nil
	file_machine_proto_goTypes = nil
	file_machine_proto_depIdxs = nil
}
